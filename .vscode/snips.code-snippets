{
  // Place your sipsakdogrula v2 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Create icon component": {
    "prefix": "ss-ico",
    "body": [
      "import { SVGProps } from '@/utils/SVGProps.ts';\n",
      "export const ${TM_FILENAME_BASE} = ({",
      "\tcolour = 'black',",
      "\tisGradient = false,",
      "\tsize = 'medium',",
      "}: SVGProps) => {",
      "\treturn (",
      "\t\t<i",
      "\t\t\tclassName={`icon ${'icon_' + size} ${'icon_' + colour} ${isGradient && 'icon_gradient'}`}",
      "\t\t>",
      "\t\t\t<svg",
      "\t\t\t\txmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='100%' height='100%'",
      "\t\t\t>",
      "\t\t\t\t{isGradient && (",
      "\t\t\t\t\t<defs>",
      "\t\t\t\t\t\t<linearGradient id={'gradient_' + colour} gradientTransform='rotate(48)'>",
      "\t\t\t\t\t\t\t<stop className='gradient_colour_start' offset='0%' />",
      "\t\t\t\t\t\t\t<stop className='gradient_colour_end' offset='100%' />",
      "\t\t\t\t\t\t</linearGradient>",
      "\t\t\t\t\t</defs>",
      "\t\t\t\t)}",
      "\t\t\t\t{/* -- paths etc here -- */}",
      "\t\t\t</svg>",
      "\t\t</i>",
      "\t);",
      "};",
      "\n export default ${TM_FILENAME_BASE};",
    ],
    "description": "Create icon component",
  },
}